=begin
#PowerTools Developer

#Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.

The version of the OpenAPI document: 2021.1.01
Contact: support@apptigent.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::FilesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::FilesApi)
    end
  end

  # unit tests for convert_image
  # Files - Convert Image
  # Convert an image from one format to another
  # @param format Output file format
  # @param file Source image file
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'convert_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for crop_image
  # Files - Crop Image
  # Crop an image
  # @param position Crop start position (use negative values to reverse crop area)
  # @param width Width (X-axis right, negative to reverse)
  # @param height Height (Y-axis down, negative to reverse)
  # @param file Source image file
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'crop_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for file_to_string
  # Files - File to string
  # Convert a file to a Base64 string
  # @param file Source file (10MB limit)
  # @param [Hash] opts the optional parameters
  # @return [OutputString]
  describe 'file_to_string test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for flip_image
  # Files - Flip Image
  # Flip an image (horizontal or vertical)
  # @param orientation Horizontal or Vertical
  # @param file Source image file
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'flip_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_qr_code
  # Files - Generate QR code
  # Generate a QR code image
  # @param [Hash] opts the optional parameters
  # @option opts [InputQRCode] :input_qr_code 
  # @return [File]
  describe 'generate_qr_code test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resize_image
  # Files - Resize Image
  # Resize an image
  # @param algorithm Optimize output quality of the target image
  # @param units Image adjustment units
  # @param file Source image file
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :height Image height (pixels or percent)
  # @option opts [Float] :width Image width (pixels or percent)
  # @return [File]
  describe 'resize_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rotate_image
  # Files - Rotate Image
  # Rotate an image by specified number of degrees
  # @param degrees Number of degrees
  # @param file Source image file
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'rotate_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for watermark_image
  # Files - Watermark Image
  # Add watermark text to an image
  # @param text Watermark text
  # @param font Text font
  # @param size Font size (points)
  # @param color Text color hex value
  # @param horizontal Horizontal alignment
  # @param vertical Vertical alignment
  # @param file Source image file
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'watermark_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
