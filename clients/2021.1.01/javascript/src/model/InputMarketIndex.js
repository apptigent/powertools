/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InputMarketIndex model module.
 * @module model/InputMarketIndex
 * @version 2021.1.01
 */
class InputMarketIndex {
    /**
     * Constructs a new <code>InputMarketIndex</code>.
     * @alias module:model/InputMarketIndex
     * @param symbol {module:model/InputMarketIndex.SymbolEnum} Market index
     */
    constructor(symbol) { 
        
        InputMarketIndex.initialize(this, symbol);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, symbol) { 
        obj['symbol'] = symbol;
    }

    /**
     * Constructs a <code>InputMarketIndex</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputMarketIndex} obj Optional instance to populate.
     * @return {module:model/InputMarketIndex} The populated <code>InputMarketIndex</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputMarketIndex();

            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Market index
 * @member {module:model/InputMarketIndex.SymbolEnum} symbol
 */
InputMarketIndex.prototype['symbol'] = undefined;

/**
 * Date (yyyy-MM-dd, leave empty for last trading day)
 * @member {String} date
 */
InputMarketIndex.prototype['date'] = undefined;





/**
 * Allowed values for the <code>symbol</code> property.
 * @enum {String}
 * @readonly
 */
InputMarketIndex['SymbolEnum'] = {

    /**
     * value: "DJA.INDX (Dow Jones Composite Average)"
     * @const
     */
    "DJA.INDX (Dow Jones Composite Average)": "DJA.INDX (Dow Jones Composite Average)",

    /**
     * value: "DJI.INDX (Dow Jones Industrial Average)"
     * @const
     */
    "DJI.INDX (Dow Jones Industrial Average)": "DJI.INDX (Dow Jones Industrial Average)",

    /**
     * value: "DJT.INDX (Dow Jones Transportation)"
     * @const
     */
    "DJT.INDX (Dow Jones Transportation)": "DJT.INDX (Dow Jones Transportation)",

    /**
     * value: "DJUS.INDX (Dow Jones US)"
     * @const
     */
    "DJUS.INDX (Dow Jones US)": "DJUS.INDX (Dow Jones US)",

    /**
     * value: "DXY.INDX (US Dollar Index)"
     * @const
     */
    "DXY.INDX (US Dollar Index)": "DXY.INDX (US Dollar Index)",

    /**
     * value: "GDOW.INDX (Global Dow USD)"
     * @const
     */
    "GDOW.INDX (Global Dow USD)": "GDOW.INDX (Global Dow USD)",

    /**
     * value: "NY.INDX (NYSE US 100 Index)"
     * @const
     */
    "NY.INDX (NYSE US 100 Index)": "NY.INDX (NYSE US 100 Index)",

    /**
     * value: "NYA.INDX (NYSE Composite)"
     * @const
     */
    "NYA.INDX (NYSE Composite)": "NYA.INDX (NYSE Composite)",

    /**
     * value: "IXIC.INDX (NASDAQ Composite)"
     * @const
     */
    "IXIC.INDX (NASDAQ Composite)": "IXIC.INDX (NASDAQ Composite)",

    /**
     * value: "NDX.INDX (NASDAQ 100)"
     * @const
     */
    "NDX.INDX (NASDAQ 100)": "NDX.INDX (NASDAQ 100)",

    /**
     * value: "GSPC.INDX (S&P 500)"
     * @const
     */
    "GSPC.INDX (S&amp;P 500)": "GSPC.INDX (S&P 500)",

    /**
     * value: "ES.INDX (S&P 500 Futures)"
     * @const
     */
    "ES.INDX (S&amp;P 500 Futures)": "ES.INDX (S&P 500 Futures)",

    /**
     * value: "MID.INDX (S&P Midcap 400)"
     * @const
     */
    "MID.INDX (S&amp;P Midcap 400)": "MID.INDX (S&P Midcap 400)",

    /**
     * value: "GPTSE.INDX (S&P TSX Composite Index [Canada])"
     * @const
     */
    "GPTSE.INDX (S&amp;P TSX Composite Index [Canada])": "GPTSE.INDX (S&P TSX Composite Index [Canada])",

    /**
     * value: "FTSE.INDX (FTSE 100 Index [UK])"
     * @const
     */
    "FTSE.INDX (FTSE 100 Index [UK])": "FTSE.INDX (FTSE 100 Index [UK])",

    /**
     * value: "CDAXX.INDX (DAX Composite Index [Germany])"
     * @const
     */
    "CDAXX.INDX (DAX Composite Index [Germany])": "CDAXX.INDX (DAX Composite Index [Germany])",

    /**
     * value: "GDAXI.INDX (DAX Index [Germany])"
     * @const
     */
    "GDAXI.INDX (DAX Index [Germany])": "GDAXI.INDX (DAX Index [Germany])",

    /**
     * value: "HSCE.INDX (Hang Seng China Enterprise (CEI))"
     * @const
     */
    "HSCE.INDX (Hang Seng China Enterprise (CEI))": "HSCE.INDX (Hang Seng China Enterprise (CEI))",

    /**
     * value: "HSI.INDX (Hang Seng Index [Hong Kong])"
     * @const
     */
    "HSI.INDX (Hang Seng Index [Hong Kong])": "HSI.INDX (Hang Seng Index [Hong Kong])",

    /**
     * value: "N100.INDX (EuroNext 100)"
     * @const
     */
    "N100.INDX (EuroNext 100)": "N100.INDX (EuroNext 100)",

    /**
     * value: "N225.INDX (Nikkei 225 Index)"
     * @const
     */
    "N225.INDX (Nikkei 225 Index)": "N225.INDX (Nikkei 225 Index)",

    /**
     * value: "RTSI.INDX (RTSI Index [Russia])"
     * @const
     */
    "RTSI.INDX (RTSI Index [Russia])": "RTSI.INDX (RTSI Index [Russia])",

    /**
     * value: "SSEC.INDX (Shanghai Composite)"
     * @const
     */
    "SSEC.INDX (Shanghai Composite)": "SSEC.INDX (Shanghai Composite)",

    /**
     * value: "SSMI.INDX (Swiss Market Index)"
     * @const
     */
    "SSMI.INDX (Swiss Market Index)": "SSMI.INDX (Swiss Market Index)"
};



export default InputMarketIndex;

