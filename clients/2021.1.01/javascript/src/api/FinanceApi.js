/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InputCurrencyConversion from '../model/InputCurrencyConversion';
import InputCurrencyFormat from '../model/InputCurrencyFormat';
import InputMarketIndex from '../model/InputMarketIndex';
import InputStockPrices from '../model/InputStockPrices';
import OutputMarketIndex from '../model/OutputMarketIndex';
import OutputNumber from '../model/OutputNumber';
import OutputStockPrice from '../model/OutputStockPrice';
import OutputString from '../model/OutputString';

/**
* Finance service.
* @module api/FinanceApi
* @version 2021.1.01
*/
export default class FinanceApi {

    /**
    * Constructs a new FinanceApi. 
    * @alias module:api/FinanceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the convertCurrency operation.
     * @callback module:api/FinanceApi~convertCurrencyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OutputNumber} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Currency - Convert currency
     * Calculate monetary value in a different currency
     * @param {Object} opts Optional parameters
     * @param {module:model/InputCurrencyConversion} opts.currencyConversion 
     * @param {module:api/FinanceApi~convertCurrencyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OutputNumber}
     */
    convertCurrency(opts, callback) {
      opts = opts || {};
      let postBody = opts['currencyConversion'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyHeader'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OutputNumber;
      return this.apiClient.callApi(
        '/ConvertCurrency', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the formatCurrency operation.
     * @callback module:api/FinanceApi~formatCurrencyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OutputString} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Currency - Format currency
     * Apply currency symbol to a numeric value
     * @param {Object} opts Optional parameters
     * @param {module:model/InputCurrencyFormat} opts.currencyFormat 
     * @param {module:api/FinanceApi~formatCurrencyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OutputString}
     */
    formatCurrency(opts, callback) {
      opts = opts || {};
      let postBody = opts['currencyFormat'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyHeader'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OutputString;
      return this.apiClient.callApi(
        '/FormatCurrency', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketIndex operation.
     * @callback module:api/FinanceApi~marketIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OutputMarketIndex} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Finance - Market index
     * Get current and historical market index information
     * @param {Object} opts Optional parameters
     * @param {module:model/InputMarketIndex} opts.marketIndex 
     * @param {module:api/FinanceApi~marketIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OutputMarketIndex}
     */
    marketIndex(opts, callback) {
      opts = opts || {};
      let postBody = opts['marketIndex'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyHeader'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OutputMarketIndex;
      return this.apiClient.callApi(
        '/MarketIndex', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stockPrices operation.
     * @callback module:api/FinanceApi~stockPricesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OutputStockPrice} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Finance - Stock prices
     * Get current and historical stock price information
     * @param {Object} opts Optional parameters
     * @param {module:model/InputStockPrices} opts.stockPrices 
     * @param {module:api/FinanceApi~stockPricesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OutputStockPrice}
     */
    stockPrices(opts, callback) {
      opts = opts || {};
      let postBody = opts['stockPrices'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyHeader'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OutputStockPrice;
      return this.apiClient.callApi(
        '/StockPrices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
