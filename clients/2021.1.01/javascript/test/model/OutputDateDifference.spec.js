/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PowerToolsDeveloper);
  }
}(this, function(expect, PowerToolsDeveloper) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PowerToolsDeveloper.OutputDateDifference();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OutputDateDifference', function() {
    it('should create an instance of OutputDateDifference', function() {
      // uncomment below and update the code to test OutputDateDifference
      //var instane = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be.a(PowerToolsDeveloper.OutputDateDifference);
    });

    it('should have the property years (base name: "years")', function() {
      // uncomment below and update the code to test the property years
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property months (base name: "months")', function() {
      // uncomment below and update the code to test the property months
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property days (base name: "days")', function() {
      // uncomment below and update the code to test the property days
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property hours (base name: "hours")', function() {
      // uncomment below and update the code to test the property hours
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property minutes (base name: "minutes")', function() {
      // uncomment below and update the code to test the property minutes
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property milliseconds (base name: "milliseconds")', function() {
      // uncomment below and update the code to test the property milliseconds
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalYears (base name: "totalYears")', function() {
      // uncomment below and update the code to test the property totalYears
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalMonths (base name: "totalMonths")', function() {
      // uncomment below and update the code to test the property totalMonths
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalDays (base name: "totalDays")', function() {
      // uncomment below and update the code to test the property totalDays
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalHours (base name: "totalHours")', function() {
      // uncomment below and update the code to test the property totalHours
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalMinutes (base name: "totalMinutes")', function() {
      // uncomment below and update the code to test the property totalMinutes
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalSeconds (base name: "totalSeconds")', function() {
      // uncomment below and update the code to test the property totalSeconds
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property totalMilliseconds (base name: "totalMilliseconds")', function() {
      // uncomment below and update the code to test the property totalMilliseconds
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

    it('should have the property ticks (base name: "ticks")', function() {
      // uncomment below and update the code to test the property ticks
      //var instance = new PowerToolsDeveloper.OutputDateDifference();
      //expect(instance).to.be();
    });

  });

}));
