/*
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InputDateTimeInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T09:13:09.005-06:00[America/Chicago]")
public class InputDateTimeInfo {
  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private String input;

  /**
   * Language culture
   */
  @JsonAdapter(CultureEnum.Adapter.class)
  public enum CultureEnum {
    EN_US("en-US"),
    
    AF_ZA("af-ZA"),
    
    AR_AE("ar-AE"),
    
    AR_BH("ar-BH"),
    
    AR_DZ("ar-DZ"),
    
    AR_EG("ar-EG"),
    
    AR_IQ("ar-IQ"),
    
    AR_JO("ar-JO"),
    
    AR_KW("ar-KW"),
    
    AR_LB("ar-LB"),
    
    AR_LY("ar-LY"),
    
    AR_MA("ar-MA"),
    
    AR_OM("ar-OM"),
    
    AR_QA("ar-QA"),
    
    AR_SA("ar-SA"),
    
    AR_SY("ar-SY"),
    
    AR_TN("ar-TN"),
    
    AR_YE("ar-YE"),
    
    AZ_AZ("az-AZ"),
    
    BE_BY("be-BY"),
    
    BG_BG("bg-BG"),
    
    BS_BA("bs-BA"),
    
    CA_ES("ca-ES"),
    
    CS_CZ("cs-CZ"),
    
    CY_GB("cy-GB"),
    
    DA_DK("da-DK"),
    
    DE_AT("de-AT"),
    
    DE_CH("de-CH"),
    
    DE_DE("de-DE"),
    
    DE_LI("de-LI"),
    
    DE_LU("de-LU"),
    
    EL_GR("el-GR"),
    
    EN_AU("en-AU"),
    
    EN_BZ("en-BZ"),
    
    EN_CA("en-CA"),
    
    EN_CB("en-CB"),
    
    EN_GB("en-GB"),
    
    EN_IE("en-IE"),
    
    EN_JM("en-JM"),
    
    EN_NZ("en-NZ"),
    
    EN_PH("en-PH"),
    
    EN_TT("en-TT"),
    
    EN_ZA("en-ZA"),
    
    EN_ZW("en-ZW"),
    
    ES_AR("es-AR"),
    
    ES_BO("es-BO"),
    
    ES_CL("es-CL"),
    
    ES_CO("es-CO"),
    
    ES_CR("es-CR"),
    
    ES_DO("es-DO"),
    
    ES_EC("es-EC"),
    
    ES_ES("es-ES"),
    
    ES_GT("es-GT"),
    
    ES_HN("es-HN"),
    
    ES_MX("es-MX"),
    
    ES_NI("es-NI"),
    
    ES_PA("es-PA"),
    
    ES_PE("es-PE"),
    
    ES_PR("es-PR"),
    
    ES_PY("es-PY"),
    
    ES_SV("es-SV"),
    
    ES_UY("es-UY"),
    
    ES_VE("es-VE"),
    
    ET_EE("et-EE"),
    
    EU_ES("eu-ES"),
    
    FA_IR("fa-IR"),
    
    FI_FI("fi-FI"),
    
    FO_FO("fo-FO"),
    
    FR_BE("fr-BE"),
    
    FR_CA("fr-CA"),
    
    FR_CH("fr-CH"),
    
    FR_FR("fr-FR"),
    
    FR_LU("fr-LU"),
    
    FR_MC("fr-MC"),
    
    GL_ES("gl-ES"),
    
    GU_IN("gu-IN"),
    
    HE_IL("he-IL"),
    
    HI_IN("hi-IN"),
    
    HR_BA("hr-BA"),
    
    HR_HR("hr-HR"),
    
    HU_HU("hu-HU"),
    
    HY_AM("hy-AM"),
    
    ID_ID("id-ID"),
    
    IS_IS("is-IS"),
    
    IT_CH("it-CH"),
    
    IT_IT("it-IT"),
    
    JA_JP("ja-JP"),
    
    KA_GE("ka-GE"),
    
    KK_KZ("kk-KZ"),
    
    KN_IN("kn-IN"),
    
    KO_KR("ko-KR"),
    
    KY_KG("ky-KG"),
    
    LT_LT("lt-LT"),
    
    LV_LV("lv-LV"),
    
    MI_NZ("mi-NZ"),
    
    MN_MN("mn-MN"),
    
    MR_IN("mr-IN"),
    
    MS_BN("ms-BN"),
    
    MS_MY("ms-MY"),
    
    MT_MT("mt-MT"),
    
    NL_BE("nl-BE"),
    
    NL_NL("nl-NL"),
    
    NN_NO("nn-NO"),
    
    NS_ZA("ns-ZA"),
    
    PA_IN("pa-IN"),
    
    PL_PL("pl-PL"),
    
    PS_AR("ps-AR"),
    
    PT_BR("pt-BR"),
    
    PT_PT("pt-PT"),
    
    RO_RO("ro-RO"),
    
    RU_RU("ru-RU"),
    
    SA_IN("sa-IN"),
    
    SK_SK("sk-SK"),
    
    SL_SI("sl-SI"),
    
    SQ_AL("sq-AL"),
    
    SR_BA("sr-BA"),
    
    SR_SP("sr-SP"),
    
    SV_FI("sv-FI"),
    
    SV_SE("sv-SE"),
    
    SW_KE("sw-KE"),
    
    TA_IN("ta-IN"),
    
    TE_IN("te-IN"),
    
    TH_TH("th-TH"),
    
    TL_PH("tl-PH"),
    
    TN_ZA("tn-ZA"),
    
    TR_TR("tr-TR"),
    
    UK_UA("uk-UA"),
    
    UR_PK("ur-PK"),
    
    UZ_UZ("uz-UZ"),
    
    VI_VN("vi-VN"),
    
    ZH_CN("zh-CN"),
    
    ZH_HK("zh-HK"),
    
    ZH_MO("zh-MO"),
    
    ZH_SG("zh-SG"),
    
    ZH_TW("zh-TW"),
    
    ZU_ZA("zu-ZA");

    private String value;

    CultureEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CultureEnum fromValue(String value) {
      for (CultureEnum b : CultureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CultureEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CultureEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CultureEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CultureEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CULTURE = "culture";
  @SerializedName(SERIALIZED_NAME_CULTURE)
  private CultureEnum culture = CultureEnum.EN_US;


  public InputDateTimeInfo input(String input) {
    
    this.input = input;
    return this;
  }

   /**
   * Source date and time
   * @return input
  **/
  @ApiModelProperty(required = true, value = "Source date and time")

  public String getInput() {
    return input;
  }


  public void setInput(String input) {
    this.input = input;
  }


  public InputDateTimeInfo culture(CultureEnum culture) {
    
    this.culture = culture;
    return this;
  }

   /**
   * Language culture
   * @return culture
  **/
  @ApiModelProperty(required = true, value = "Language culture")

  public CultureEnum getCulture() {
    return culture;
  }


  public void setCulture(CultureEnum culture) {
    this.culture = culture;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputDateTimeInfo inputDateTimeInfo = (InputDateTimeInfo) o;
    return Objects.equals(this.input, inputDateTimeInfo.input) &&
        Objects.equals(this.culture, inputDateTimeInfo.culture);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, culture);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputDateTimeInfo {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    culture: ").append(toIndentedString(culture)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

