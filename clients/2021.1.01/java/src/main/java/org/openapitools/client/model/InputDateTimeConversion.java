/*
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InputDateTimeConversion
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T09:13:09.005-06:00[America/Chicago]")
public class InputDateTimeConversion {
  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private String input;

  /**
   * Gets or Sets source
   */
  @JsonAdapter(SourceEnum.Adapter.class)
  public enum SourceEnum {
    GMT_STANDARD_TIME_GMT_GREENWICH_MEAN_TIME_DUBLIN_EDINBURGH_LISBON_LONDON("GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London"),
    
    GREENWICH_STANDARD_TIME_GMT_MONROVIA_REYKJAVIK("Greenwich Standard Time - (GMT) Monrovia, Reykjavik"),
    
    W_EUROPE_STANDARD_TIME_GMT_01_00_AMSTERDAM_BERLIN_BERN_ROME_STOCKHOLM_VIENNA("W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"),
    
    CENTRAL_EUROPE_STANDARD_TIME_GMT_01_00_BELGRADE_BRATISLAVA_BUDAPEST_LJUBLJANA_PRAGUE("Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"),
    
    CENTRAL_EUROPEAN_STANDARD_TIME_GMT_01_00_SARAJEVO_SKOPJE_WARSAW_ZAGREB("Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb"),
    
    W_CENTRAL_AFRICA_STANDARD_TIME_GMT_01_00_WEST_CENTRAL_AFRICA("W. Central Africa Standard Time - (GMT+01:00) West Central Africa"),
    
    GTB_STANDARD_TIME_GMT_02_00_ATHENS_BUCHAREST_ISTANBUL("GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul"),
    
    MIDDLE_EAST_STANDARD_TIME_GMT_02_00_BEIRUT("Middle East Standard Time - (GMT+02:00) Beirut"),
    
    EGYPT_STANDARD_TIME_GMT_02_00_CAIRO("Egypt Standard Time - (GMT+02:00) Cairo"),
    
    SOUTH_AFRICA_STANDARD_TIME_GMT_02_00_HARARE_PRETORIA("South Africa Standard Time - (GMT+02:00) Harare, Pretoria"),
    
    FLE_STANDARD_TIME_GMT_02_00_HELSINKI_KYIV_RIGA_SOFIA_TALLINN_VILNIUS("FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius"),
    
    ISRAEL_STANDARD_TIME_GMT_02_00_JERUSALEM("Israel Standard Time - (GMT+02:00) Jerusalem"),
    
    E_EUROPE_STANDARD_TIME_GMT_02_00_MINSK("E. Europe Standard Time - (GMT+02:00) Minsk"),
    
    NAMIBIA_STANDARD_TIME_GMT_02_00_WINDHOEK("Namibia Standard Time - (GMT+02:00) Windhoek"),
    
    ARABIC_STANDARD_TIME_GMT_03_00_BAGHDAD("Arabic Standard Time - (GMT+03:00) Baghdad"),
    
    ARAB_STANDARD_TIME_GMT_03_00_KUWAIT_RIYADH("Arab Standard Time - (GMT+03:00) Kuwait, Riyadh"),
    
    RUSSIAN_STANDARD_TIME_GMT_03_00_MOSCOW_ST_PETERSBURG_VOLGOGRAD("Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd"),
    
    E_AFRICA_STANDARD_TIME_GMT_03_00_NAIROBI("E. Africa Standard Time - (GMT+03:00) Nairobi"),
    
    GEORGIAN_STANDARD_TIME_GMT_03_00_TBILISI("Georgian Standard Time - (GMT+03:00) Tbilisi"),
    
    IRAN_STANDARD_TIME_GMT_03_30_TEHRAN("Iran Standard Time - (GMT+03:30) Tehran"),
    
    ARABIAN_STANDARD_TIME_GMT_04_00_ABU_DHABI_MUSCAT("Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat"),
    
    AZERBAIJAN_STANDARD_TIME_GMT_04_00_BAKU("Azerbaijan Standard Time - (GMT+04:00) Baku"),
    
    MAURITIUS_STANDARD_TIME_GMT_04_00_PORT_LOUIS("Mauritius Standard Time - (GMT+04:00) Port Louis"),
    
    CAUCASUS_STANDARD_TIME_GMT_04_00_YEREVAN("Caucasus Standard Time - (GMT+04:00) Yerevan"),
    
    AFGHANISTAN_STANDARD_TIME_GMT_04_30_KABUL("Afghanistan Standard Time - (GMT+04:30) Kabul"),
    
    EKATERINBURG_STANDARD_TIME_GMT_05_00_EKATERINBURG("Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg"),
    
    PAKISTAN_STANDARD_TIME_GMT_05_00_ISLAMABAD_KARACHI("Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi"),
    
    WEST_ASIA_STANDARD_TIME_GMT_05_00_TASHKENT("West Asia Standard Time - (GMT+05:00) Tashkent"),
    
    INDIA_STANDARD_TIME_GMT_05_30_CHENNAI_KOLKATA_MUMBAI_NEW_DELHI("India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi"),
    
    SRI_LANKA_STANDARD_TIME_GMT_05_30_SRI_JAYAWARDENEPURA("Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura"),
    
    NEPAL_STANDARD_TIME_GMT_05_45_KATHMANDU("Nepal Standard Time - (GMT+05:45) Kathmandu"),
    
    N_CENTRAL_ASIA_STANDARD_TIME_GMT_06_00_ALMATY_NOVOSIBIRSK("N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk"),
    
    CENTRAL_ASIA_STANDARD_TIME_GMT_06_00_ASTANA_DHAKA("Central Asia Standard Time - (GMT+06:00) Astana, Dhaka"),
    
    MYANMAR_STANDARD_TIME_GMT_06_30_YANGON_RANGOON_("Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)"),
    
    SE_ASIA_STANDARD_TIME_GMT_07_00_BANGKOK_HANOI_JAKARTA("SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta"),
    
    NORTH_ASIA_STANDARD_TIME_GMT_07_00_KRASNOYARSK("North Asia Standard Time - (GMT+07:00) Krasnoyarsk"),
    
    CHINA_STANDARD_TIME_GMT_08_00_BEIJING_CHONGQING_HONG_KONG_URUMQI("China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi"),
    
    NORTH_ASIA_EAST_STANDARD_TIME_GMT_08_00_IRKUTSK_ULAAN_BATAAR("North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar"),
    
    SINGAPORE_STANDARD_TIME_GMT_08_00_KUALA_LUMPUR_SINGAPORE("Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore"),
    
    W_AUSTRALIA_STANDARD_TIME_GMT_08_00_PERTH("W. Australia Standard Time - (GMT+08:00) Perth"),
    
    TAIPEI_STANDARD_TIME_GMT_08_00_TAIPEI("Taipei Standard Time - (GMT+08:00) Taipei"),
    
    TOKYO_STANDARD_TIME_GMT_09_00_OSAKA_SAPPORO_TOKYO("Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo"),
    
    KOREA_STANDARD_TIME_GMT_09_00_SEOUL("Korea Standard Time - (GMT+09:00) Seoul"),
    
    YAKUTSK_STANDARD_TIME_GMT_09_00_YAKUTSK("Yakutsk Standard Time - (GMT+09:00) Yakutsk"),
    
    CEN_AUSTRALIA_STANDARD_TIME_GMT_09_30_ADELAIDE("Cen. Australia Standard Time - (GMT+09:30) Adelaide"),
    
    AUS_CENTRAL_STANDARD_TIME_GMT_09_30_DARWIN("AUS Central Standard Time - (GMT+09:30) Darwin"),
    
    E_AUSTRALIA_STANDARD_TIME_GMT_10_00_BRISBANE("E. Australia Standard Time - (GMT+10:00) Brisbane"),
    
    AUS_EASTERN_STANDARD_TIME_GMT_10_00_CANBERRA_MELBOURNE_SYDNEY("AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney"),
    
    WEST_PACIFIC_STANDARD_TIME_GMT_10_00_GUAM_PORT_MORESBY("West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby"),
    
    TASMANIA_STANDARD_TIME_GMT_10_00_HOBART("Tasmania Standard Time - (GMT+10:00) Hobart"),
    
    VLADIVOSTOK_STANDARD_TIME_GMT_10_00_VLADIVOSTOK("Vladivostok Standard Time - (GMT+10:00) Vladivostok"),
    
    CENTRAL_PACIFIC_STANDARD_TIME_GMT_11_00_MAGADAN_SOLOMON_IS_NEW_CALEDONIA("Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia"),
    
    NEW_ZEALAND_STANDARD_TIME_GMT_12_00_AUCKLAND_WELLINGTON("New Zealand Standard Time - (GMT+12:00) Auckland, Wellington"),
    
    FIJI_STANDARD_TIME_GMT_12_00_FIJI_KAMCHATKA_MARSHALL_IS_("Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is."),
    
    TONGA_STANDARD_TIME_GMT_13_00_NUKU_ALOFA("Tonga Standard Time - (GMT+13:00) Nuku'alofa"),
    
    AZORES_STANDARD_TIME_GMT_01_00_AZORES("Azores Standard Time - (GMT-01:00) Azores"),
    
    CAPE_VERDE_STANDARD_TIME_GMT_01_00_CAPE_VERDE_IS_("Cape Verde Standard Time - (GMT-01:00) Cape Verde Is."),
    
    MID_ATLANTIC_STANDARD_TIME_GMT_02_00_MID_ATLANTIC("Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic"),
    
    E_SOUTH_AMERICA_STANDARD_TIME_GMT_03_00_BRASILIA("E. South America Standard Time - (GMT-03:00) Brasilia"),
    
    ARGENTINA_STANDARD_TIME_GMT_03_00_BUENOS_AIRES("Argentina Standard Time - (GMT-03:00) Buenos Aires"),
    
    SA_EASTERN_STANDARD_TIME_GMT_03_00_GEORGETOWN("SA Eastern Standard Time - (GMT-03:00) Georgetown"),
    
    GREENLAND_STANDARD_TIME_GMT_03_00_GREENLAND("Greenland Standard Time - (GMT-03:00) Greenland"),
    
    MONTEVIDEO_STANDARD_TIME_GMT_03_00_MONTEVIDEO("Montevideo Standard Time - (GMT-03:00) Montevideo"),
    
    NEWFOUNDLAND_STANDARD_TIME_GMT_03_30_NEWFOUNDLAND("Newfoundland Standard Time - (GMT-03:30) Newfoundland"),
    
    ATLANTIC_STANDARD_TIME_GMT_04_00_ATLANTIC_TIME_CANADA_("Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)"),
    
    SA_WESTERN_STANDARD_TIME_GMT_04_00_LA_PAZ("SA Western Standard Time - (GMT-04:00) La Paz"),
    
    CENTRAL_BRAZILIAN_STANDARD_TIME_GMT_04_00_MANAUS("Central Brazilian Standard Time - (GMT-04:00) Manaus"),
    
    PACIFIC_SA_STANDARD_TIME_GMT_04_00_SANTIAGO("Pacific SA Standard Time - (GMT-04:00) Santiago"),
    
    VENEZUELA_STANDARD_TIME_GMT_04_30_CARACAS("Venezuela Standard Time - (GMT-04:30) Caracas"),
    
    SA_PACIFIC_STANDARD_TIME_GMT_05_00_BOGOTA_LIMA_QUITO_RIO_BRANCO("SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco"),
    
    EASTERN_STANDARD_TIME_GMT_05_00_EASTERN_TIME_US_CANADA_("Eastern Standard Time - (GMT-05:00) Eastern Time (US & Canada)"),
    
    US_EASTERN_STANDARD_TIME_GMT_05_00_INDIANA_EAST_("US Eastern Standard Time - (GMT-05:00) Indiana (East)"),
    
    CENTRAL_AMERICA_STANDARD_TIME_GMT_06_00_CENTRAL_AMERICA("Central America Standard Time - (GMT-06:00) Central America"),
    
    CENTRAL_STANDARD_TIME_GMT_06_00_CENTRAL_TIME_US_CANADA_("Central Standard Time - (GMT-06:00) Central Time (US & Canada)"),
    
    CENTRAL_STANDARD_TIME_MEXICO_GMT_06_00_GUADALAJARA_MEXICO_CITY_MONTERREY("Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey"),
    
    CANADA_CENTRAL_STANDARD_TIME_GMT_06_00_SASKATCHEWAN("Canada Central Standard Time - (GMT-06:00) Saskatchewan"),
    
    US_MOUNTAIN_STANDARD_TIME_GMT_07_00_ARIZONA("US Mountain Standard Time - (GMT-07:00) Arizona"),
    
    MOUNTAIN_STANDARD_TIME_MEXICO_GMT_07_00_CHIHUAHUA_LA_PAZ_MAZATLAN("Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan"),
    
    MOUNTAIN_STANDARD_TIME_GMT_07_00_MOUNTAIN_TIME_US_CANADA_("Mountain Standard Time - (GMT-07:00) Mountain Time (US & Canada)"),
    
    PACIFIC_STANDARD_TIME_GMT_08_00_PACIFIC_TIME_US_CANADA_("Pacific Standard Time - (GMT-08:00) Pacific Time (US & Canada)"),
    
    PACIFIC_STANDARD_TIME_MEXICO_GMT_08_00_TIJUANA_BAJA_CALIFORNIA("Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California"),
    
    ALASKAN_STANDARD_TIME_GMT_09_00_ALASKA("Alaskan Standard Time - (GMT-09:00) Alaska"),
    
    HAWAIIAN_STANDARD_TIME_GMT_10_00_HAWAII("Hawaiian Standard Time - (GMT-10:00) Hawaii"),
    
    SAMOA_STANDARD_TIME_GMT_11_00_MIDWAY_ISLAND_SAMOA("Samoa Standard Time - (GMT-11:00) Midway Island, Samoa"),
    
    DATELINE_STANDARD_TIME_GMT_12_00_INTERNATIONAL_DATE_LINE_WEST("Dateline Standard Time - (GMT-12:00) International Date Line West");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SourceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private SourceEnum source = SourceEnum.GMT_STANDARD_TIME_GMT_GREENWICH_MEAN_TIME_DUBLIN_EDINBURGH_LISBON_LONDON;

  /**
   * Gets or Sets target
   */
  @JsonAdapter(TargetEnum.Adapter.class)
  public enum TargetEnum {
    GMT_STANDARD_TIME_GMT_GREENWICH_MEAN_TIME_DUBLIN_EDINBURGH_LISBON_LONDON("GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London"),
    
    GREENWICH_STANDARD_TIME_GMT_MONROVIA_REYKJAVIK("Greenwich Standard Time - (GMT) Monrovia, Reykjavik"),
    
    W_EUROPE_STANDARD_TIME_GMT_01_00_AMSTERDAM_BERLIN_BERN_ROME_STOCKHOLM_VIENNA("W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"),
    
    CENTRAL_EUROPE_STANDARD_TIME_GMT_01_00_BELGRADE_BRATISLAVA_BUDAPEST_LJUBLJANA_PRAGUE("Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"),
    
    CENTRAL_EUROPEAN_STANDARD_TIME_GMT_01_00_SARAJEVO_SKOPJE_WARSAW_ZAGREB("Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb"),
    
    W_CENTRAL_AFRICA_STANDARD_TIME_GMT_01_00_WEST_CENTRAL_AFRICA("W. Central Africa Standard Time - (GMT+01:00) West Central Africa"),
    
    GTB_STANDARD_TIME_GMT_02_00_ATHENS_BUCHAREST_ISTANBUL("GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul"),
    
    MIDDLE_EAST_STANDARD_TIME_GMT_02_00_BEIRUT("Middle East Standard Time - (GMT+02:00) Beirut"),
    
    EGYPT_STANDARD_TIME_GMT_02_00_CAIRO("Egypt Standard Time - (GMT+02:00) Cairo"),
    
    SOUTH_AFRICA_STANDARD_TIME_GMT_02_00_HARARE_PRETORIA("South Africa Standard Time - (GMT+02:00) Harare, Pretoria"),
    
    FLE_STANDARD_TIME_GMT_02_00_HELSINKI_KYIV_RIGA_SOFIA_TALLINN_VILNIUS("FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius"),
    
    ISRAEL_STANDARD_TIME_GMT_02_00_JERUSALEM("Israel Standard Time - (GMT+02:00) Jerusalem"),
    
    E_EUROPE_STANDARD_TIME_GMT_02_00_MINSK("E. Europe Standard Time - (GMT+02:00) Minsk"),
    
    NAMIBIA_STANDARD_TIME_GMT_02_00_WINDHOEK("Namibia Standard Time - (GMT+02:00) Windhoek"),
    
    ARABIC_STANDARD_TIME_GMT_03_00_BAGHDAD("Arabic Standard Time - (GMT+03:00) Baghdad"),
    
    ARAB_STANDARD_TIME_GMT_03_00_KUWAIT_RIYADH("Arab Standard Time - (GMT+03:00) Kuwait, Riyadh"),
    
    RUSSIAN_STANDARD_TIME_GMT_03_00_MOSCOW_ST_PETERSBURG_VOLGOGRAD("Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd"),
    
    E_AFRICA_STANDARD_TIME_GMT_03_00_NAIROBI("E. Africa Standard Time - (GMT+03:00) Nairobi"),
    
    GEORGIAN_STANDARD_TIME_GMT_03_00_TBILISI("Georgian Standard Time - (GMT+03:00) Tbilisi"),
    
    IRAN_STANDARD_TIME_GMT_03_30_TEHRAN("Iran Standard Time - (GMT+03:30) Tehran"),
    
    ARABIAN_STANDARD_TIME_GMT_04_00_ABU_DHABI_MUSCAT("Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat"),
    
    AZERBAIJAN_STANDARD_TIME_GMT_04_00_BAKU("Azerbaijan Standard Time - (GMT+04:00) Baku"),
    
    MAURITIUS_STANDARD_TIME_GMT_04_00_PORT_LOUIS("Mauritius Standard Time - (GMT+04:00) Port Louis"),
    
    CAUCASUS_STANDARD_TIME_GMT_04_00_YEREVAN("Caucasus Standard Time - (GMT+04:00) Yerevan"),
    
    AFGHANISTAN_STANDARD_TIME_GMT_04_30_KABUL("Afghanistan Standard Time - (GMT+04:30) Kabul"),
    
    EKATERINBURG_STANDARD_TIME_GMT_05_00_EKATERINBURG("Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg"),
    
    PAKISTAN_STANDARD_TIME_GMT_05_00_ISLAMABAD_KARACHI("Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi"),
    
    WEST_ASIA_STANDARD_TIME_GMT_05_00_TASHKENT("West Asia Standard Time - (GMT+05:00) Tashkent"),
    
    INDIA_STANDARD_TIME_GMT_05_30_CHENNAI_KOLKATA_MUMBAI_NEW_DELHI("India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi"),
    
    SRI_LANKA_STANDARD_TIME_GMT_05_30_SRI_JAYAWARDENEPURA("Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura"),
    
    NEPAL_STANDARD_TIME_GMT_05_45_KATHMANDU("Nepal Standard Time - (GMT+05:45) Kathmandu"),
    
    N_CENTRAL_ASIA_STANDARD_TIME_GMT_06_00_ALMATY_NOVOSIBIRSK("N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk"),
    
    CENTRAL_ASIA_STANDARD_TIME_GMT_06_00_ASTANA_DHAKA("Central Asia Standard Time - (GMT+06:00) Astana, Dhaka"),
    
    MYANMAR_STANDARD_TIME_GMT_06_30_YANGON_RANGOON_("Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)"),
    
    SE_ASIA_STANDARD_TIME_GMT_07_00_BANGKOK_HANOI_JAKARTA("SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta"),
    
    NORTH_ASIA_STANDARD_TIME_GMT_07_00_KRASNOYARSK("North Asia Standard Time - (GMT+07:00) Krasnoyarsk"),
    
    CHINA_STANDARD_TIME_GMT_08_00_BEIJING_CHONGQING_HONG_KONG_URUMQI("China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi"),
    
    NORTH_ASIA_EAST_STANDARD_TIME_GMT_08_00_IRKUTSK_ULAAN_BATAAR("North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar"),
    
    SINGAPORE_STANDARD_TIME_GMT_08_00_KUALA_LUMPUR_SINGAPORE("Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore"),
    
    W_AUSTRALIA_STANDARD_TIME_GMT_08_00_PERTH("W. Australia Standard Time - (GMT+08:00) Perth"),
    
    TAIPEI_STANDARD_TIME_GMT_08_00_TAIPEI("Taipei Standard Time - (GMT+08:00) Taipei"),
    
    TOKYO_STANDARD_TIME_GMT_09_00_OSAKA_SAPPORO_TOKYO("Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo"),
    
    KOREA_STANDARD_TIME_GMT_09_00_SEOUL("Korea Standard Time - (GMT+09:00) Seoul"),
    
    YAKUTSK_STANDARD_TIME_GMT_09_00_YAKUTSK("Yakutsk Standard Time - (GMT+09:00) Yakutsk"),
    
    CEN_AUSTRALIA_STANDARD_TIME_GMT_09_30_ADELAIDE("Cen. Australia Standard Time - (GMT+09:30) Adelaide"),
    
    AUS_CENTRAL_STANDARD_TIME_GMT_09_30_DARWIN("AUS Central Standard Time - (GMT+09:30) Darwin"),
    
    E_AUSTRALIA_STANDARD_TIME_GMT_10_00_BRISBANE("E. Australia Standard Time - (GMT+10:00) Brisbane"),
    
    AUS_EASTERN_STANDARD_TIME_GMT_10_00_CANBERRA_MELBOURNE_SYDNEY("AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney"),
    
    WEST_PACIFIC_STANDARD_TIME_GMT_10_00_GUAM_PORT_MORESBY("West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby"),
    
    TASMANIA_STANDARD_TIME_GMT_10_00_HOBART("Tasmania Standard Time - (GMT+10:00) Hobart"),
    
    VLADIVOSTOK_STANDARD_TIME_GMT_10_00_VLADIVOSTOK("Vladivostok Standard Time - (GMT+10:00) Vladivostok"),
    
    CENTRAL_PACIFIC_STANDARD_TIME_GMT_11_00_MAGADAN_SOLOMON_IS_NEW_CALEDONIA("Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia"),
    
    NEW_ZEALAND_STANDARD_TIME_GMT_12_00_AUCKLAND_WELLINGTON("New Zealand Standard Time - (GMT+12:00) Auckland, Wellington"),
    
    FIJI_STANDARD_TIME_GMT_12_00_FIJI_KAMCHATKA_MARSHALL_IS_("Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is."),
    
    TONGA_STANDARD_TIME_GMT_13_00_NUKU_ALOFA("Tonga Standard Time - (GMT+13:00) Nuku'alofa"),
    
    AZORES_STANDARD_TIME_GMT_01_00_AZORES("Azores Standard Time - (GMT-01:00) Azores"),
    
    CAPE_VERDE_STANDARD_TIME_GMT_01_00_CAPE_VERDE_IS_("Cape Verde Standard Time - (GMT-01:00) Cape Verde Is."),
    
    MID_ATLANTIC_STANDARD_TIME_GMT_02_00_MID_ATLANTIC("Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic"),
    
    E_SOUTH_AMERICA_STANDARD_TIME_GMT_03_00_BRASILIA("E. South America Standard Time - (GMT-03:00) Brasilia"),
    
    ARGENTINA_STANDARD_TIME_GMT_03_00_BUENOS_AIRES("Argentina Standard Time - (GMT-03:00) Buenos Aires"),
    
    SA_EASTERN_STANDARD_TIME_GMT_03_00_GEORGETOWN("SA Eastern Standard Time - (GMT-03:00) Georgetown"),
    
    GREENLAND_STANDARD_TIME_GMT_03_00_GREENLAND("Greenland Standard Time - (GMT-03:00) Greenland"),
    
    MONTEVIDEO_STANDARD_TIME_GMT_03_00_MONTEVIDEO("Montevideo Standard Time - (GMT-03:00) Montevideo"),
    
    NEWFOUNDLAND_STANDARD_TIME_GMT_03_30_NEWFOUNDLAND("Newfoundland Standard Time - (GMT-03:30) Newfoundland"),
    
    ATLANTIC_STANDARD_TIME_GMT_04_00_ATLANTIC_TIME_CANADA_("Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)"),
    
    SA_WESTERN_STANDARD_TIME_GMT_04_00_LA_PAZ("SA Western Standard Time - (GMT-04:00) La Paz"),
    
    CENTRAL_BRAZILIAN_STANDARD_TIME_GMT_04_00_MANAUS("Central Brazilian Standard Time - (GMT-04:00) Manaus"),
    
    PACIFIC_SA_STANDARD_TIME_GMT_04_00_SANTIAGO("Pacific SA Standard Time - (GMT-04:00) Santiago"),
    
    VENEZUELA_STANDARD_TIME_GMT_04_30_CARACAS("Venezuela Standard Time - (GMT-04:30) Caracas"),
    
    SA_PACIFIC_STANDARD_TIME_GMT_05_00_BOGOTA_LIMA_QUITO_RIO_BRANCO("SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco"),
    
    EASTERN_STANDARD_TIME_GMT_05_00_EASTERN_TIME_US_CANADA_("Eastern Standard Time - (GMT-05:00) Eastern Time (US & Canada)"),
    
    US_EASTERN_STANDARD_TIME_GMT_05_00_INDIANA_EAST_("US Eastern Standard Time - (GMT-05:00) Indiana (East)"),
    
    CENTRAL_AMERICA_STANDARD_TIME_GMT_06_00_CENTRAL_AMERICA("Central America Standard Time - (GMT-06:00) Central America"),
    
    CENTRAL_STANDARD_TIME_GMT_06_00_CENTRAL_TIME_US_CANADA_("Central Standard Time - (GMT-06:00) Central Time (US & Canada)"),
    
    CENTRAL_STANDARD_TIME_MEXICO_GMT_06_00_GUADALAJARA_MEXICO_CITY_MONTERREY("Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey"),
    
    CANADA_CENTRAL_STANDARD_TIME_GMT_06_00_SASKATCHEWAN("Canada Central Standard Time - (GMT-06:00) Saskatchewan"),
    
    US_MOUNTAIN_STANDARD_TIME_GMT_07_00_ARIZONA("US Mountain Standard Time - (GMT-07:00) Arizona"),
    
    MOUNTAIN_STANDARD_TIME_MEXICO_GMT_07_00_CHIHUAHUA_LA_PAZ_MAZATLAN("Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan"),
    
    MOUNTAIN_STANDARD_TIME_GMT_07_00_MOUNTAIN_TIME_US_CANADA_("Mountain Standard Time - (GMT-07:00) Mountain Time (US & Canada)"),
    
    PACIFIC_STANDARD_TIME_GMT_08_00_PACIFIC_TIME_US_CANADA_("Pacific Standard Time - (GMT-08:00) Pacific Time (US & Canada)"),
    
    PACIFIC_STANDARD_TIME_MEXICO_GMT_08_00_TIJUANA_BAJA_CALIFORNIA("Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California"),
    
    ALASKAN_STANDARD_TIME_GMT_09_00_ALASKA("Alaskan Standard Time - (GMT-09:00) Alaska"),
    
    HAWAIIAN_STANDARD_TIME_GMT_10_00_HAWAII("Hawaiian Standard Time - (GMT-10:00) Hawaii"),
    
    SAMOA_STANDARD_TIME_GMT_11_00_MIDWAY_ISLAND_SAMOA("Samoa Standard Time - (GMT-11:00) Midway Island, Samoa"),
    
    DATELINE_STANDARD_TIME_GMT_12_00_INTERNATIONAL_DATE_LINE_WEST("Dateline Standard Time - (GMT-12:00) International Date Line West");

    private String value;

    TargetEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TargetEnum fromValue(String value) {
      for (TargetEnum b : TargetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TargetEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TargetEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TargetEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TargetEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private TargetEnum target = TargetEnum.GMT_STANDARD_TIME_GMT_GREENWICH_MEAN_TIME_DUBLIN_EDINBURGH_LISBON_LONDON;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;


  public InputDateTimeConversion input(String input) {
    
    this.input = input;
    return this;
  }

   /**
   * Source date and time
   * @return input
  **/
  @ApiModelProperty(required = true, value = "Source date and time")

  public String getInput() {
    return input;
  }


  public void setInput(String input) {
    this.input = input;
  }


  public InputDateTimeConversion source(SourceEnum source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(required = true, value = "")

  public SourceEnum getSource() {
    return source;
  }


  public void setSource(SourceEnum source) {
    this.source = source;
  }


  public InputDateTimeConversion target(TargetEnum target) {
    
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @ApiModelProperty(required = true, value = "")

  public TargetEnum getTarget() {
    return target;
  }


  public void setTarget(TargetEnum target) {
    this.target = target;
  }


  public InputDateTimeConversion format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * Display format (defaults to &#39;yyyy-MM-dd HH:mm:ss&#39;)
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Display format (defaults to 'yyyy-MM-dd HH:mm:ss')")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    this.format = format;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputDateTimeConversion inputDateTimeConversion = (InputDateTimeConversion) o;
    return Objects.equals(this.input, inputDateTimeConversion.input) &&
        Objects.equals(this.source, inputDateTimeConversion.source) &&
        Objects.equals(this.target, inputDateTimeConversion.target) &&
        Objects.equals(this.format, inputDateTimeConversion.format);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, source, target, format);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputDateTimeConversion {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

