/*
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InputDateTimeConversion;
import org.openapitools.client.model.InputDateTimeDifference;
import org.openapitools.client.model.InputDateTimeFormat;
import org.openapitools.client.model.InputDateTimeInfo;
import org.openapitools.client.model.OutputDateDifference;
import org.openapitools.client.model.OutputDateInfo;
import org.openapitools.client.model.OutputString;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DateTimeApi
 */
@Ignore
public class DateTimeApiTest {

    private final DateTimeApi api = new DateTimeApi();

    
    /**
     * DateTime - DateTime difference
     *
     * Calculate the difference between two dates
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dateTimeDifferenceTest() throws ApiException {
        InputDateTimeDifference dateTimeDifference = null;
        OutputDateDifference response = api.dateTimeDifference(dateTimeDifference);

        // TODO: test validations
    }
    
    /**
     * DateTime - Get date and time information
     *
     * Retrieve useful date and time information, such as day of year, total seconds and ticks
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dateTimeInfoTest() throws ApiException {
        InputDateTimeInfo dateTimeInfo = null;
        OutputDateInfo response = api.dateTimeInfo(dateTimeInfo);

        // TODO: test validations
    }
    
    /**
     * DateTime - Format date and time
     *
     * Create a date/time string in a specific format
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void formatDateTimeTest() throws ApiException {
        InputDateTimeFormat dateTimeFormat = null;
        OutputString response = api.formatDateTime(dateTimeFormat);

        // TODO: test validations
    }
    
    /**
     * DateTime - Get world time
     *
     * Convert date and time from one time zone to another
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void worldTimeTest() throws ApiException {
        InputDateTimeConversion dateTimeConversion = null;
        OutputString response = api.worldTime(dateTimeConversion);

        // TODO: test validations
    }
    
}
