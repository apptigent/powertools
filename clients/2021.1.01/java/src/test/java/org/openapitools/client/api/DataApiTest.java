/*
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InputCsvConversionJSON;
import org.openapitools.client.model.InputDataQuery;
import org.openapitools.client.model.InputJsonConversionCSV;
import org.openapitools.client.model.InputJsonConversionHTML;
import org.openapitools.client.model.InputJsonConversionXML;
import org.openapitools.client.model.InputXmlConversionJSON;
import org.openapitools.client.model.OutputString;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataApi
 */
@Ignore
public class DataApiTest {

    private final DataApi api = new DataApi();

    
    /**
     * Data - CSV to JSON
     *
     * Convert a CSV string to a JSON array
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void csvToJsonTest() throws ApiException {
        InputCsvConversionJSON csvConversionJSON = null;
        OutputString response = api.csvToJson(csvConversionJSON);

        // TODO: test validations
    }
    
    /**
     * Data - JSON to CSV
     *
     * Convert a JSON array to CSV string
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jsonToCsvTest() throws ApiException {
        InputJsonConversionCSV jsonConversionCSV = null;
        OutputString response = api.jsonToCsv(jsonConversionCSV);

        // TODO: test validations
    }
    
    /**
     * Data - JSON to HTML Table
     *
     * Convert a JSON array to an HTML table
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jsonToHtmlTest() throws ApiException {
        InputJsonConversionHTML jsonConversionHTML = null;
        OutputString response = api.jsonToHtml(jsonConversionHTML);

        // TODO: test validations
    }
    
    /**
     * Data - JSON to XML
     *
     * Convert a JSON object to an XML string
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jsonToXmlTest() throws ApiException {
        InputJsonConversionXML jsonConversionXML = null;
        OutputString response = api.jsonToXml(jsonConversionXML);

        // TODO: test validations
    }
    
    /**
     * Data - Query JSON
     *
     * Query a JSON object using a JSONPath expression
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryJsonTest() throws ApiException {
        InputDataQuery inputDataQuery = null;
        OutputString response = api.queryJson(inputDataQuery);

        // TODO: test validations
    }
    
    /**
     * Data - Query XML
     *
     * Query an XML string using an XPath expression
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryXmlTest() throws ApiException {
        InputDataQuery inputDataQuery = null;
        OutputString response = api.queryXml(inputDataQuery);

        // TODO: test validations
    }
    
    /**
     * Data - XML to JSON
     *
     * Convert an XML string to a JSON object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void xmlToJsonTest() throws ApiException {
        InputXmlConversionJSON xmlConversionJSON = null;
        OutputString response = api.xmlToJson(xmlConversionJSON);

        // TODO: test validations
    }
    
}
