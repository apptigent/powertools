/*
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InputCurrencyConversion;
import org.openapitools.client.model.InputCurrencyFormat;
import org.openapitools.client.model.InputMarketIndex;
import org.openapitools.client.model.InputStockPrices;
import org.openapitools.client.model.OutputMarketIndex;
import org.openapitools.client.model.OutputNumber;
import org.openapitools.client.model.OutputStockPrice;
import org.openapitools.client.model.OutputString;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FinanceApi
 */
@Ignore
public class FinanceApiTest {

    private final FinanceApi api = new FinanceApi();

    
    /**
     * Currency - Convert currency
     *
     * Calculate monetary value in a different currency
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void convertCurrencyTest() throws ApiException {
        InputCurrencyConversion currencyConversion = null;
        OutputNumber response = api.convertCurrency(currencyConversion);

        // TODO: test validations
    }
    
    /**
     * Currency - Format currency
     *
     * Apply currency symbol to a numeric value
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void formatCurrencyTest() throws ApiException {
        InputCurrencyFormat currencyFormat = null;
        OutputString response = api.formatCurrency(currencyFormat);

        // TODO: test validations
    }
    
    /**
     * Finance - Market index
     *
     * Get current and historical market index information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketIndexTest() throws ApiException {
        InputMarketIndex marketIndex = null;
        OutputMarketIndex response = api.marketIndex(marketIndex);

        // TODO: test validations
    }
    
    /**
     * Finance - Stock prices
     *
     * Get current and historical stock price information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stockPricesTest() throws ApiException {
        InputStockPrices stockPrices = null;
        OutputStockPrice response = api.stockPrices(stockPrices);

        // TODO: test validations
    }
    
}
