//
// InputMarketIndex.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct InputMarketIndex: Codable {

    public enum Symbol: String, Codable, CaseIterable {
        case djaIndxDowJonesCompositeAverage = "DJA.INDX (Dow Jones Composite Average)"
        case djiIndxDowJonesIndustrialAverage = "DJI.INDX (Dow Jones Industrial Average)"
        case djtIndxDowJonesTransportation = "DJT.INDX (Dow Jones Transportation)"
        case djusIndxDowJonesUs = "DJUS.INDX (Dow Jones US)"
        case dxyIndxUsDollarIndex = "DXY.INDX (US Dollar Index)"
        case gdowIndxGlobalDowUsd = "GDOW.INDX (Global Dow USD)"
        case nyIndxNyseUs100Index = "NY.INDX (NYSE US 100 Index)"
        case nyaIndxNyseComposite = "NYA.INDX (NYSE Composite)"
        case ixicIndxNasdaqComposite = "IXIC.INDX (NASDAQ Composite)"
        case ndxIndxNasdaq100 = "NDX.INDX (NASDAQ 100)"
        case gspcIndxS&amp;p500 = "GSPC.INDX (S&P 500)"
        case esIndxS&amp;p500Futures = "ES.INDX (S&P 500 Futures)"
        case midIndxS&amp;pMidcap400 = "MID.INDX (S&P Midcap 400)"
        case gptseIndxS&amp;pTsxCompositeIndex[canada] = "GPTSE.INDX (S&P TSX Composite Index [Canada])"
        case ftseIndxFtse100Index[uk] = "FTSE.INDX (FTSE 100 Index [UK])"
        case cdaxxIndxDaxCompositeIndex[germany] = "CDAXX.INDX (DAX Composite Index [Germany])"
        case gdaxiIndxDaxIndex[germany] = "GDAXI.INDX (DAX Index [Germany])"
        case hsceIndxHangSengChinaEnterpriseCei = "HSCE.INDX (Hang Seng China Enterprise (CEI))"
        case hsiIndxHangSengIndex[hongKong] = "HSI.INDX (Hang Seng Index [Hong Kong])"
        case n100IndxEuronext100 = "N100.INDX (EuroNext 100)"
        case n225IndxNikkei225Index = "N225.INDX (Nikkei 225 Index)"
        case rtsiIndxRtsiIndex[russia] = "RTSI.INDX (RTSI Index [Russia])"
        case ssecIndxShanghaiComposite = "SSEC.INDX (Shanghai Composite)"
        case ssmiIndxSwissMarketIndex = "SSMI.INDX (Swiss Market Index)"
    }
    /** Market index */
    public var symbol: Symbol
    /** Date (yyyy-MM-dd, leave empty for last trading day) */
    public var date: String?

    public init(symbol: Symbol, date: String? = nil) {
        self.symbol = symbol
        self.date = date
    }

}

