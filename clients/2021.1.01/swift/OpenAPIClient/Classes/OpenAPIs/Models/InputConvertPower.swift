//
// InputConvertPower.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct InputConvertPower: Codable {

    public enum Source: String, Codable, CaseIterable {
        case britishThermalUnitPerHour = "BritishThermalUnitPerHour"
        case decawatt = "Decawatt"
        case deciwatt = "Deciwatt"
        case electricalHorsepower = "ElectricalHorsepower"
        case femtowatt = "Femtowatt"
        case gigawatt = "Gigawatt"
        case hydraulicHorsepower = "HydraulicHorsepower"
        case kilowatt = "Kilowatt"
        case mechanicalHorsepower = "MechanicalHorsepower"
        case megawatt = "Megawatt"
        case microwatt = "Microwatt"
        case milliwatt = "Milliwatt"
        case nanowatt = "Nanowatt"
        case petawatt = "Petawatt"
        case picowatt = "Picowatt"
        case terawatt = "Terawatt"
        case watt = "Watt"
    }
    public enum Target: String, Codable, CaseIterable {
        case britishThermalUnitPerHour = "BritishThermalUnitPerHour"
        case decawatt = "Decawatt"
        case deciwatt = "Deciwatt"
        case electricalHorsepower = "ElectricalHorsepower"
        case femtowatt = "Femtowatt"
        case gigawatt = "Gigawatt"
        case hydraulicHorsepower = "HydraulicHorsepower"
        case kilowatt = "Kilowatt"
        case mechanicalHorsepower = "MechanicalHorsepower"
        case megawatt = "Megawatt"
        case microwatt = "Microwatt"
        case milliwatt = "Milliwatt"
        case nanowatt = "Nanowatt"
        case petawatt = "Petawatt"
        case picowatt = "Picowatt"
        case terawatt = "Terawatt"
        case watt = "Watt"
    }
    public var input: Double
    public var source: Source
    public var target: Target

    public init(input: Double, source: Source, target: Target) {
        self.input = input
        self.source = source
        self.target = target
    }

}

