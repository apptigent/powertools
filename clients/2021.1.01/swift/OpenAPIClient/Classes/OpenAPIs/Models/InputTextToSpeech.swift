//
// InputTextToSpeech.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct InputTextToSpeech: Codable {

    public enum ModelType: String, Codable, CaseIterable {
        case plainText = "PlainText"
        case ssml = "SSML"
    }
    public enum Voice: String, Codable, CaseIterable {
        case arEg,HodaFemale = "ar-EG, Hoda (Female)"
        case arSa,NaayfMale = "ar-SA, Naayf (Male)"
        case bgBg,IvanMale = "bg-BG, Ivan (Male)"
        case caEs,HerenaFemale = "ca-ES, Herena (Female)"
        case csCz,JakubMale = "cs-CZ, Jakub (Male)"
        case daDk,HelleFemale = "da-DK, Helle (Female)"
        case deAt,MichaelMale = "de-AT, Michael (Male)"
        case deCh,KarstenMale = "de-CH, Karsten (Male)"
        case deDe,HeddaFemale = "de-DE, Hedda (Female)"
        case deDe,StefanMale = "de-DE, Stefan (Male)"
        case elGr,StefanosMale = "el-GR, Stefanos (Male)"
        case enAu,CatherineFemale = "en-AU, Catherine (Female)"
        case enAu,HayleyFemale = "en-AU, Hayley (Female)"
        case enCa,HeatherFemale = "en-CA, Heather (Female)"
        case enCa,LindaFemale = "en-CA, Linda (Female)"
        case enGb,GeorgeMale = "en-GB, George (Male)"
        case enGb,HazelFemale = "en-GB, Hazel (Female)"
        case enGb,SusanFemale = "en-GB, Susan (Female)"
        case enIe,SeanMale = "en-IE, Sean (Male)"
        case enIn,HeeraFemale = "en-IN, Heera (Female)"
        case enIn,PriyaFemale = "en-IN, Priya (Female)"
        case enIn,RaviMale = "en-IN, Ravi (Male)"
        case enUs,AriaFemale = "en-US, Aria (Female)"
        case enUs,BenjaminMale = "en-US, Benjamin (Male)"
        case enUs,GuyMale = "en-US, Guy (Male)"
        case enUs,ZiraFemale = "en-US, Zira (Female)"
        case esEs,HelenaFemale = "es-ES, Helena (Female)"
        case esEs,LauraFemale = "es-ES, Laura (Female)"
        case esEs,PabloMale = "es-ES, Pablo (Male)"
        case esMx,HildaFemale = "es-MX, Hilda (Female)"
        case esMx,RaulMale = "es-MX, Raul (Male)"
        case fiFi,HeidiFemale = "fi-FI, Heidi (Female)"
        case frCa,CarolineFemale = "fr-CA, Caroline (Female)"
        case frCa,HarmonieFemale = "fr-CA, Harmonie (Female)"
        case frCh,GuillaumeMale = "fr-CH, Guillaume (Male)"
        case frFr,HortenseFemale = "fr-FR, Hortense (Female)"
        case frFr,JulieFemale = "fr-FR, Julie (Female)"
        case frFr,PaulMale = "fr-FR, Paul (Male)"
        case heIl,AsafMale = "he-IL, Asaf (Male)"
        case hiIn,HemantMale = "hi-IN, Hemant (Male)"
        case hiIn,KalpanaFemale = "hi-IN, Kalpana (Female)"
        case hrHr,MatejMale = "hr-HR, Matej (Male)"
        case huHu,SzabolcsMale = "hu-HU, Szabolcs (Male)"
        case idId,AndikaMale = "id-ID, Andika (Male)"
        case itIt,CosimoMale = "it-IT, Cosimo (Male)"
        case itIt,LuciaFemale = "it-IT, Lucia (Female)"
        case jaJp,AyumiFemale = "ja-JP, Ayumi (Female)"
        case jaJp,HarukaFemale = "ja-JP, Haruka (Female)"
        case jaJp,IchiroMale = "ja-JP, Ichiro (Male)"
        case koKr,HeamiFemale = "ko-KR, Heami (Female)"
        case msMy,RizwanMale = "ms-MY, Rizwan (Male)"
        case nbNo,HuldaFemale = "nb-NO, Hulda (Female)"
        case nlNl,HannaFemale = "nl-NL, Hanna (Female)"
        case plPl,PaulinaFemale = "pl-PL, Paulina (Female)"
        case ptBr,DanielMale = "pt-BR, Daniel (Male)"
        case ptBr,HeloisaFemale = "pt-BR, Heloisa (Female)"
        case ptPt,HeliaFemale = "pt-PT, Helia (Female)"
        case roRo,AndreiMale = "ro-RO, Andrei (Male)"
        case ruRu,EkaterinaFemale = "ru-RU, Ekaterina (Female)"
        case ruRu,IrinaFemale = "ru-RU, Irina (Female)"
        case ruRu,PavelMale = "ru-RU, Pavel (Male)"
        case skSk,FilipMale = "sk-SK, Filip (Male)"
        case slSi,LadoMale = "sl-SI, Lado (Male)"
        case svSe,HedvigFemale = "sv-SE, Hedvig (Female)"
        case taIn,ValluvarMale = "ta-IN, Valluvar (Male)"
        case teIn,ChitraFemale = "te-IN, Chitra (Female)"
        case thTh,PattaraMale = "th-TH, Pattara (Male)"
        case trTr,SedaFemale = "tr-TR, Seda (Female)"
        case viVn,AnMale = "vi-VN, An (Male)"
        case zhCn,HuihuiFemale = "zh-CN, Huihui (Female)"
        case zhCn,KangkangMale = "zh-CN, Kangkang (Male)"
        case zhCn,YaoyaoFemale = "zh-CN, Yaoyao (Female)"
        case zhHk,DannyMale = "zh-HK, Danny (Male)"
        case zhHk,TracyFemale = "zh-HK, Tracy (Female)"
        case zhTw,HanhanFemale = "zh-TW, HanHan (Female)"
        case zhTw,YatingFemale = "zh-TW, Yating (Female)"
        case zhTw,ZhiweiMale = "zh-TW, Zhiwei (Male)"
    }
    /** Text to convert (10,000 characters max) */
    public var text: String
    /** Text or file type */
    public var type: ModelType = .plainText
    /** Voice locale (must match language of input text) */
    public var voice: Voice = .enUs,AriaFemale

    public init(text: String, type: ModelType = .plainText, voice: Voice = .enUs,AriaFemale) {
        self.text = text
        self.type = type
        self.voice = voice
    }

}

