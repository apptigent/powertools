/* 
 * PowerTools Developer
 *
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing InputStockPrices
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InputStockPricesTests
    {
        // TODO uncomment below to declare an instance variable for InputStockPrices
        //private InputStockPrices instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of InputStockPrices
            //instance = new InputStockPrices();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InputStockPrices
        /// </summary>
        [Test]
        public void InputStockPricesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" InputStockPrices
            //Assert.IsInstanceOf(typeof(InputStockPrices), instance);
        }


        /// <summary>
        /// Test the property 'Symbols'
        /// </summary>
        [Test]
        public void SymbolsTest()
        {
            // TODO unit test for the property 'Symbols'
        }
        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Test]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
        /// <summary>
        /// Test the property 'Exchange'
        /// </summary>
        [Test]
        public void ExchangeTest()
        {
            // TODO unit test for the property 'Exchange'
        }

    }

}
