/*
 * PowerTools Developer
 *
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * API version: 2021.1.01
 * Contact: support@apptigent.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InputCollectionSearchNumeric struct for InputCollectionSearchNumeric
type InputCollectionSearchNumeric struct {
	// Collection of strings to search
	Input []float32 `json:"input"`
	// Number to match
	Match float32 `json:"match"`
	// Type of number - integer or decimal
	Type *string `json:"type,omitempty"`
}

// NewInputCollectionSearchNumeric instantiates a new InputCollectionSearchNumeric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputCollectionSearchNumeric(input []float32, match float32, ) *InputCollectionSearchNumeric {
	this := InputCollectionSearchNumeric{}
	this.Input = input
	this.Match = match
	var type_ string = "Integer"
	this.Type = &type_
	return &this
}

// NewInputCollectionSearchNumericWithDefaults instantiates a new InputCollectionSearchNumeric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputCollectionSearchNumericWithDefaults() *InputCollectionSearchNumeric {
	this := InputCollectionSearchNumeric{}
	var type_ string = "Integer"
	this.Type = &type_
	return &this
}

// GetInput returns the Input field value
func (o *InputCollectionSearchNumeric) GetInput() []float32 {
	if o == nil  {
		var ret []float32
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *InputCollectionSearchNumeric) GetInputOk() (*[]float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *InputCollectionSearchNumeric) SetInput(v []float32) {
	o.Input = v
}

// GetMatch returns the Match field value
func (o *InputCollectionSearchNumeric) GetMatch() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.Match
}

// GetMatchOk returns a tuple with the Match field value
// and a boolean to check if the value has been set.
func (o *InputCollectionSearchNumeric) GetMatchOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Match, true
}

// SetMatch sets field value
func (o *InputCollectionSearchNumeric) SetMatch(v float32) {
	o.Match = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InputCollectionSearchNumeric) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputCollectionSearchNumeric) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InputCollectionSearchNumeric) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InputCollectionSearchNumeric) SetType(v string) {
	o.Type = &v
}

func (o InputCollectionSearchNumeric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["input"] = o.Input
	}
	if true {
		toSerialize["match"] = o.Match
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableInputCollectionSearchNumeric struct {
	value *InputCollectionSearchNumeric
	isSet bool
}

func (v NullableInputCollectionSearchNumeric) Get() *InputCollectionSearchNumeric {
	return v.value
}

func (v *NullableInputCollectionSearchNumeric) Set(val *InputCollectionSearchNumeric) {
	v.value = val
	v.isSet = true
}

func (v NullableInputCollectionSearchNumeric) IsSet() bool {
	return v.isSet
}

func (v *NullableInputCollectionSearchNumeric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputCollectionSearchNumeric(val *InputCollectionSearchNumeric) *NullableInputCollectionSearchNumeric {
	return &NullableInputCollectionSearchNumeric{value: val, isSet: true}
}

func (v NullableInputCollectionSearchNumeric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputCollectionSearchNumeric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


