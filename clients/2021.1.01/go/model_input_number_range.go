/*
 * PowerTools Developer
 *
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * API version: 2021.1.01
 * Contact: support@apptigent.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InputNumberRange struct for InputNumberRange
type InputNumberRange struct {
	// Start of range
	Start float32 `json:"start"`
	// End of range
	End float32 `json:"end"`
}

// NewInputNumberRange instantiates a new InputNumberRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputNumberRange(start float32, end float32, ) *InputNumberRange {
	this := InputNumberRange{}
	this.Start = start
	this.End = end
	return &this
}

// NewInputNumberRangeWithDefaults instantiates a new InputNumberRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputNumberRangeWithDefaults() *InputNumberRange {
	this := InputNumberRange{}
	return &this
}

// GetStart returns the Start field value
func (o *InputNumberRange) GetStart() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *InputNumberRange) GetStartOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *InputNumberRange) SetStart(v float32) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *InputNumberRange) GetEnd() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *InputNumberRange) GetEndOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *InputNumberRange) SetEnd(v float32) {
	o.End = v
}

func (o InputNumberRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["end"] = o.End
	}
	return json.Marshal(toSerialize)
}

type NullableInputNumberRange struct {
	value *InputNumberRange
	isSet bool
}

func (v NullableInputNumberRange) Get() *InputNumberRange {
	return v.value
}

func (v *NullableInputNumberRange) Set(val *InputNumberRange) {
	v.value = val
	v.isSet = true
}

func (v NullableInputNumberRange) IsSet() bool {
	return v.isSet
}

func (v *NullableInputNumberRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputNumberRange(val *InputNumberRange) *NullableInputNumberRange {
	return &NullableInputNumberRange{value: val, isSet: true}
}

func (v NullableInputNumberRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputNumberRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


