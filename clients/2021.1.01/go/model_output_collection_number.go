/*
 * PowerTools Developer
 *
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * API version: 2021.1.01
 * Contact: support@apptigent.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OutputCollectionNumber struct for OutputCollectionNumber
type OutputCollectionNumber struct {
	// Success
	Status *bool `json:"status,omitempty"`
	// First Value
	Item *float32 `json:"item,omitempty"`
	// All Values
	Items *[]float32 `json:"items,omitempty"`
}

// NewOutputCollectionNumber instantiates a new OutputCollectionNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputCollectionNumber() *OutputCollectionNumber {
	this := OutputCollectionNumber{}
	return &this
}

// NewOutputCollectionNumberWithDefaults instantiates a new OutputCollectionNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputCollectionNumberWithDefaults() *OutputCollectionNumber {
	this := OutputCollectionNumber{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OutputCollectionNumber) GetStatus() bool {
	if o == nil || o.Status == nil {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputCollectionNumber) GetStatusOk() (*bool, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OutputCollectionNumber) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *OutputCollectionNumber) SetStatus(v bool) {
	o.Status = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *OutputCollectionNumber) GetItem() float32 {
	if o == nil || o.Item == nil {
		var ret float32
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputCollectionNumber) GetItemOk() (*float32, bool) {
	if o == nil || o.Item == nil {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *OutputCollectionNumber) HasItem() bool {
	if o != nil && o.Item != nil {
		return true
	}

	return false
}

// SetItem gets a reference to the given float32 and assigns it to the Item field.
func (o *OutputCollectionNumber) SetItem(v float32) {
	o.Item = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *OutputCollectionNumber) GetItems() []float32 {
	if o == nil || o.Items == nil {
		var ret []float32
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputCollectionNumber) GetItemsOk() (*[]float32, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *OutputCollectionNumber) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []float32 and assigns it to the Items field.
func (o *OutputCollectionNumber) SetItems(v []float32) {
	o.Items = &v
}

func (o OutputCollectionNumber) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Item != nil {
		toSerialize["item"] = o.Item
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableOutputCollectionNumber struct {
	value *OutputCollectionNumber
	isSet bool
}

func (v NullableOutputCollectionNumber) Get() *OutputCollectionNumber {
	return v.value
}

func (v *NullableOutputCollectionNumber) Set(val *OutputCollectionNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputCollectionNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputCollectionNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputCollectionNumber(val *OutputCollectionNumber) *NullableOutputCollectionNumber {
	return &NullableOutputCollectionNumber{value: val, isSet: true}
}

func (v NullableOutputCollectionNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputCollectionNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


